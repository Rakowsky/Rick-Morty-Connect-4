possble js

var checkForWinner = function(row, column){
// pseudocode
// for(i = 0; i< row; i++)
// for(j = 0; j< column; j++)

  // checks columns
if(

  ($('.slot.column.0.row.yellow').length > 3) ||
  ($('.slot.column.1.row.yellow').length > 3) ||
  ($('.slot.column.2.row.yellow').length > 3) ||
  ($('.slot.column.3.row.yellow').length > 3) ||
  ($('.slot.column.4.row.yellow').length > 3) ||
  ($('.slot.column.5.row.yellow').length > 3) ||
  ($('.slot.column.6.row.yellow').length > 3) ||

  // // checks rows
  ($('.slot.column.row.yellow').length > 3) ||
  ($('.slot.column.row.1.yellow').length > 3) ||
  ($('.slot.column.row.2.yellow').length > 3) ||
  ($('.slot.column.row.3.yellow').length > 3) ||
  ($('.slot.column.row.4.yellow').length > 3) ||
  ($('.slot.column.row.5.yellow').length > 3)

  // checks diagonally
  // ($('.slot.column.0.row.yellow').length > 3) ||
  // ($('.slot.column.1.row.yellow').length > 3) ||
  // ($('.slot.column.2.row.yellow').length > 3) ||
  // ($('.slot.column.3.row.yellow').length > 3) ||
  // ($('.slot.column.4.row.yellow').length > 3) ||
  // ($('.slot.column.5.row.yellow').length > 3) ||
  // ($('.slot.column.6.row.yellow').length > 3)

) {
  alert('you win!');
} else if (
  ($('.slot.column.0.row.red').length > 3) ||
  ($('.slot.column.1.row.red').length > 3) ||
  ($('.slot.column.2.row.red').length > 3) ||
  ($('.slot.column.3.row.red').length > 3) ||
  ($('.slot.column.4.row.red').length > 3) ||
  ($('.slot.column.5.row.red').length > 3) ||
  ($('.slot.column.6.row.red').length > 3) ||

  // // checks rows
  ($('.slot.column.row.red').length > 3) ||
  ($('.slot.column.row.1.red').length > 3) ||
  ($('.slot.column.row.2.red').length > 3) ||
  ($('.slot.column.row.3.red').length > 3) ||
  ($('.slot.column.row.4.red').length > 3) ||
  ($('.slot.column.row.5.red').length > 3)

  // checks diagonally
  // ($('.slot.column.0.row.red').length > 3) ||
  // ($('.slot.column.1.row.red').length > 3) ||
  // ($('.slot.column.2.row.red').length > 3) ||
  // ($('.slot.column.3.row.red').length > 3) ||
  // ($('.slot.column.4.row.red').length > 3) ||
  // ($('.slot.column.5.row.red').length > 3) ||
  // ($('.slot.column.6.row.red').length > 3)
  ) {
  alert('2 wins');
} else {
  // nextTurn();
  // $player1.toggle($player2);
}

};

// checkForWinner();


function checkLine(a,b,c,d) {
    // Check first cell non-zero and all cells match
    return ((a != 0) && (a ==b) && (a == c) && (a == d));
}


for (r = 0; r < 3; r++)
        for (c = 0; c < 7; c++)
            if (checkLine(board[r][c], board[r+1][c], board[r+2][c], board[r+3][c]))
                return board[r][c];

    // Check right
    for (r = 0; r < 6; r++)
        for (c = 0; c < 4; c++)
            if (checkLine(board[r][c], board[r][c+1], board[r][c+2], board[r][c+3]))
                return bd[r][c];

    // Check down-right
    for (r = 0; r < 3; r++)
        for (c = 0; c < 4; c++)
            if (checkLine(board[r][c], board[r+1][c+1], board[r+2][c+2], board[r+3][c+3]))
                return board[r][c];

    // Check down-left
    for (r = 3; r < 6; r++)
        for (c = 0; c < 4; c++)
            if (checkLine(board[r][c], board[r-1][c+1], board[r-2][c+2], board[r-3][c+3]))
                return board[r][c];

    alert('winner');












    $('.slot').click(function(event) {
          $(this).off().addClass('red');
          // board[parseInt(event.target.classList[2])][parseInt(event.target.classList[4])] = 2;
          // console.table(board);
             var x = event.target.classList[1][event.target.classList[1].length-1];
            var y = event.target.classList[2][event.target.classList[2].length-1];
            board[parseInt(y)][parseInt(x)] = 1;
          checkForWinner();
           // $(this).toggle($player1, $player2);
          changeTurn();

});






NEW CODE

$(document).ready(function(){
// create lenght of rows and columns

var row = 6;
var column = 7;
var index = 0;
var board = [];
var turn = true;



// function handleClick() {
//   // what player is in turn
//   // what color do I change the box to
//   // fire check array?
//   var player1 = $('slot.red');
//   var player2 = $('slot.yellow');
//   var currentPlayer = player1;


//   if(currentPlayer === true){
//     $('.slot').addClass('red');
//       var x = event.target.classList[1][event.target.classList[1].length-1];
//       var y = event.target.classList[2][event.target.classList[2].length-1];
//       board[parseInt(y)][parseInt(x)] = 1;
//       checkForWinner();
//     } else{
//       $('.slot').addClass('yellow');
//       var a = event.target.classList[1][event.target.classList[1].length-1];
//       var b = event.target.classList[2][event.target.classList[2].length-1];
//       board[parseInt(b)][parseInt(a)] = 1;
//       checkForWinner();
//     }
// }

// create board for 6x7 connect 4
function createBoard(){
   for(var i = 0; i < row; i++) {
    board[i] = [];
      for(var j = 0; j < column; j++) {
            var $slot = $('<div>');
            $slot.click(handleClick);
            // adding individual class names to each slot
            $slot.addClass('slot');
            $slot.addClass('column-' + j);
            $slot.addClass('row-' + i);
            $('.gameboard').append($slot);
            board[i][j] = 0;
      }
   }
}


createBoard();

console.table(board);
console.log(board);



/*var changeTurn = function(){
  if(turn = true){
    return $player1();
    else {
      return $player2();
    }
  }
};*/

var changeTurn = function(){
    if(turn === true){
      $('.slot').click(function(event) {
            $(this).off().addClass('red');
              var x = event.target.classList[1][event.target.classList[1].length-1];
              var y = event.target.classList[2][event.target.classList[2].length-1];
              board[parseInt(y)][parseInt(x)] = 1;
              checkForWinner();
              turn = false;
    } else{
       $('.slot').click(function(event) {
        $(this).off().addClass('yellow');
        var x = event.target.classList[1][event.target.classList[1].length-1];
        var y = event.target.classList[2][event.target.classList[2].length-1];
        board[parseInt(y)][parseInt(x)] = 2;
        checkForWinner();
        // console.table(board);
        turn = true;
    }))
  };




var checkForWinner = function(){
  // check for both winners

  for(var r = 0; r < 5; r++) {
    for (var c = 0; c < 7; c++) {
    // loop through vertically
      if(
        // (board[r][c] !== 0) &&
        (board[r][c] === 1)&&
        (board[r + 1][c] === 1) &&
        (board[r + 2][c] === 1) &&
        (board[r + 3][c] === 1)

        ){
          alert('red win ver');
        }
      if(
        // (board[r][c] !== 0) &&
        (board[r][c] === 2)&&
        (board[r + 1][c] === 2) &&
        (board[r + 2][c] === 2) &&
        (board[r + 3][c] === 2)

        ){
          alert('yellow win ver');
        }
        // loop through horizontally
        if(

        // (board[r][c] !== 0) &&
        (board[r][c] === 1)&&
        (board[r][c+1] === 1) &&
        (board[r][c+2] === 1) &&
        (board[r][c+3] === 1)

        ){
          alert('red win hor');
        }
        if(

        // (board[r][c] !== 0) &&
        (board[r][c] === 2)&&
        (board[r][c+1] === 2) &&
        (board[r][c+2] === 2) &&
        (board[r][c+3] === 2)

        ){
          alert('yellow win hor');
        }

        // check diagonally down
         if(

          // (board[r][c] !== 0) &&
          (board[r][c] ===  1) &&
          (board[r + 1][c + 1] === 1) &&
          (board[r + 2][c + 2] === 1) &&
          (board[r + 3][c + 3] === 1)

           ) {
           alert('red win dia down');
        }
         if(

          // (board[r][c] !== 0) &&
          (board[r][c] ===  2) &&
          (board[r + 1][c + 1] === 2) &&
          (board[r + 2][c + 2] === 2) &&
          (board[r + 3][c + 3] === 2)

           ) {
           alert('yellow win dia down');
        }
        // check diagonally up
         if(

          // (board[r][c] !== 0) &&
          (board[r][c] ===  1) &&
          (board[r + 1][c - 1] === 1) &&
          (board[r + 2][c - 2] === 1) &&
          (board[r + 3][c - 3] === 1)

           ) {
           alert('red win dia up');
        }
        if(

          // (board[r][c] !== 0) &&
          (board[r][c] === 2) &&
          (board[r + 1][c - 1] === 2) &&
          (board[r + 2][c - 2] === 2) &&
          (board[r + 3][c - 3] === 2)

           ) {
           alert('yellow win dia up');
        }
        // debugger;
        // else {
        //   return false;
        // }
    }
  }
};

/*checkForWinner();

function handleClick(){
  if(turn === true){
    $(this).addClass('red')
  } else{
    $(this).off().addClass('yellow');
  }
}


// //player 1 red turn
var $player1 = $(function() {
    $('.slot').hover(
    function() {
        $(this).addClass('red');
    }, function() {
        $(this).removeClass('red');
    });
$('.slot').click(function(event) {
          $(this).off().addClass('red');
          // board[parseInt(event.target.classList[2])][parseInt(event.target.classList[4])] = 2;
          // console.table(board);
             var x = event.target.classList[1][event.target.classList[1].length-1];
            var y = event.target.classList[2][event.target.classList[2].length-1];
            board[parseInt(y)][parseInt(x)] = 1;
              console.table(board);
            checkForWinner();
           // $(this).toggle($player1, $player2);
            changeTurn();

});
});
    $('.slot').click(function(event) {
          $(this).off().addClass('red');
          // board[parseInt(event.target.classList[2])][parseInt(event.target.classList[4])] = 2;
          // console.table(board);
             var x = event.target.classList[1][event.target.classList[1].length-1];
            var y = event.target.classList[2][event.target.classList[2].length-1];
            board[parseInt(y)][parseInt(x)] = 1;
          checkForWinner();
           // $(this).toggle($player1, $player2);
          changeTurn();

});


player 2 yellow turn
var $player2 = $(function() {
    $('.slot').hover(
    function() {
        $(this).addClass('yellow');
    }, function() {
        $(this).removeClass('yellow');
    });$('.slot').click(function(event) {
      // Taka wrote some stuff here but it was a mess and didn't work
      // console.log(this, event);
      // console.log(event.target.classList);
      // let yes = event.target.classList;
      // let newXIndex = 0;
      // let newYIndex = 0;
      // yes.forEach((ye, i) => {
      //   console.log(ye);
      //   if(ye === 'column') {
      //     console.log('its a column');
      //     newXIndex = parseInt(i)+1;
      //     console.log('newxindex --> ', newXIndex)
      //   } else if (ye === 'row') {
      //     console.log('its a row');
      //     newYIndex = parseInt(i)+1;
      //     console.log('newyindex --> ', newYIndex);
        // }
      // })
      // debugger
      // if(i=== board.length){
      //   i = 0;
      // }
      // debugger
      $(this).off().addClass('yellow');
      // board.splice(i,1,2);
      console.log(event.target.classList[1][event.target.classList[1].length-1], event.target.classList[2][event.target.classList[2].length-1]);
      var x = event.target.classList[1][event.target.classList[1].length-1];
      var y = event.target.classList[2][event.target.classList[2].length-1];
      board[parseInt(y)][parseInt(x)] = 2;
      console.table(board);
      checkForWinner();
      // $(this).toggle($player1, $player2);
      changeTurn();

});
});*/





});




